// ***************–ü—Ä–æ—Ç–æ—Ç–∏–ø–Ω–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è —Ç–∞ –º–µ—Ç–æ–¥ Object.create***************\\
// const user = {
//     name: 'Alice',
//     age: 23,
//     sayHello() {
//         console.log(`Hello my name is ${this.name}`);
//     },
//     getAge() {
//         console.log(`my age ${this.age}`);
//     }
// }


// const student = Object.create(user);

// console.log(student);
// student.sayHello()


// student.name = 'Kate';
// student.sayHello()


// student.getAge();


// student.age = 30;
// student.getAge();









// *********************************ES6 Class*********************************\\




// *****–ü—É–±–ª—ñ—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏***** \\
// class User {
//     constructor(name) {
//         this.name = name;
//     }

//     showName() {
//         console.log(`Hello my name is ${this.name}`);
//     }
// }

// const student = new User('Alice');
// student.showName()










// *****–ü—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏***** \\
// class User {
//     #password;
//     constructor(name, password) {
//         this.name = name;
//         this.#password = password;
//     }

//     showName() {
//         if (this.#checkPassword()) {
//             console.log(`Hello my name is ${this.name}`);
//         } else {
//             console.log("Who are you ?üßê");
//         }
//     }

//     #checkPassword() {
//         const password = prompt();
//         return password === this.#password;
//     }
// }


// const student = new User('Alice', 'qwerty111');
// student.showName()










// ******–ì–µ—Ç—Ç–µ—Ä–∏ —ñ —Å–µ—Ç—Ç–µ—Ä–∏****** \\

// class User {
//     #password;
//     #email;
//     constructor(name, password, email) {
//         this.name = name;
//         this.#password = password;
//         this.#email = email;
//     }

//     showName() {
//         if (this.#checkPassword()) {
//             console.log(`Hello my name is ${this.name}`);
//         } else {
//             console.log("Who are you ?üßê");
//         }
//     }

//     #checkPassword() {
//         const password = prompt();
//         return password === this.#password;
//     }

//     get email() {
//         if (this.#checkPassword()) {
//             return this.#email
//         }
//     }

//     set email(newEmail) {
//         if (this.#checkPassword()) {
//             this.#email = newEmail;
//         }
//     }
// }

// const student = new User('Alice', 'qwerty111', 'test@gmail.com');
// console.log(student.email);

// student.email = 'new@gmail.com';

// console.log(student.email);










// *****–°—Ç–∞—Ç–∏—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏***** \\
// –†–æ–∑–≥–ª—è–Ω–µ–º–æ –Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ–º—É –∑–∞–≤–¥–∞–Ω—ñ (Task-3)












// **********–ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –∫–ª–∞—Å—ñ–≤********* \\


// class User {
//     #password;
//     #email;
//     constructor(name, password, email) {
//         this.name = name;
//         this.#password = password;
//         this.#email = email;
//     }

//     showName() {
//         if (this.#checkPassword()) {
//             console.log(`Hello my name is ${this.name}`);
//         } else {
//             console.log("Who are you ?üßê");
//         }
//     }

//     #checkPassword() {
//         const password = prompt();
//         return password === this.#password;
//     }

//     get email() {
//         if (this.#checkPassword()) {
//             return this.#email
//         }
//     }

//     set email(newEmail) {
//         if (this.#checkPassword()) {
//             this.#email = newEmail;
//         }
//     }
// }




// class Student extends User {
//     constructor(name, password, email, points) {
//         super(name, password, email)
//         this.points = points;
//     }
//     getPoints() {
//         console.log(`${this.name} has ${this.points} points`);
//     }
// }



// const student = new Student('Alice', 'qwerty111', 'test@gmail.com', 38);
// student.showName()
// student.getPoints()








// ***********************–ü—Ä–∞–∫—Ç–∏–∫–∞*********************** \\


// *******Task-1****** \\
// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å Rectangle, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ width —Ç–∞ height, –∞ —Ç–∞–∫–æ–∂ –≥–µ—Ç–µ—Ä–∏ —Ç–∞ —Å–µ—Ç–µ—Ä–∏ –¥–ª—è —Ü–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π. –ì–µ—Ç–µ—Ä–∏ –ø–æ–≤–∏–Ω–Ω—ñ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π, –∞ —Å–µ—Ç–µ—Ä–∏ –ø–æ–≤–∏–Ω–Ω—ñ –¥–æ–∑–≤–æ–ª—è—Ç–∏ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –∑ –≤–∞–ª—ñ–¥–∞—Ü—ñ—î—é.

// class Rectangle {

// }
// const item = new Rectangle({ width: 10, height: 5 });

// console.log(item.width); // get
// item.width = 12 // set
// console.log(item.width); //get










// *******Task-2******* \\
// –†–µ–∞–ª—ñ–∑—É–π—Ç–µ –∫–ª–∞—Å Student, —è–∫–∏–π —É—Å–ø–∞–¥–∫–æ–≤—É–≤–∞—Ç–∏–º–µ—Ç—å—Å—è –≤—ñ–¥ –∫–ª–∞—Å—É User. –¶–µ–π –∫–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ —Ç–∞–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:
// name –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (—ñ–º'—è, —É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User),
// surname –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (–ø—Ä—ñ–∑–≤–∏—â–µ, —É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User),
// year (—Ä—ñ–∫ –≤—Å—Ç—É–ø—É –¥–æ –≤—É–∑—É).

// –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ getFullName() (—É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User), –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —è–∫–æ–≥–æ –º–æ–∂–Ω–∞ –≤–∏–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ—á–∞—Å–Ω–æ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ —Å—Ç—É–¥–µ–Ω—Ç–∞.
// –¢–∞–∫–æ–∂ –∫–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ getCourse(), —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç–∏–º–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫—É—Ä—Å —Å—Ç—É–¥–µ–Ω—Ç–∞ (–≤—ñ–¥ 1 –¥–æ 5, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∏—â—É—î 5  –∫—É—Ä—Å –≤–∏–≤–æ–¥–∏—Ç–∏ —â–æ —Å—Ç—É–¥–µ–Ω—Ç —è–≤–ª—è—î—Ç—å—Å—è –≤–∏–ø—É—Å–∫–Ω–∏–∫–æ–º).
// –ö—É—Ä—Å –æ–±—á–∏—Å–ª—é—î—Ç—å—Å—è —Ç–∞–∫: –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–æ–∫—É –≤—ñ–¥–Ω—è—Ç–∏ —Ä—ñ–∫ –≤—Å—Ç—É–ø—É –¥–æ –≤—É–∑—É. –ü–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–∫ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ (—á–∏—Ç–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é!!!).
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear
// –ü—Ä–∏–∫–ª–∞–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –µ–∫–∑–µ–º–ø–ª—è—Ä—É –∫–ª–∞—Å–∞:
// const student = new Student('–ü–µ—Ç—Ä–∏–∫', '–ü—è—Ç–æ—á–∫–∏–Ω', 2019);

// class User {

// }


// const student = new Student('–ü–µ—Ç—Ä–∏–∫', '–ü—è—Ç–æ—á–∫–∏–Ω', 2019);
// console.log(student);
// console.log(student.getFullName()); //–ø–æ–≤–µ—Ä–Ω–µ '–ü–µ—Ç—Ä–∏–∫ –ü—è—Ç–æ—á–∫–∏–Ω'
// console.log(student.getCourse());   //–ø–æ–≤–µ—Ä–Ω–µ 4












// *******Task-3******* \\
// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å Hero, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –≥–µ—Ä–æ—è –∑ –≥—Ä–∏. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –ø—É–±–ª—ñ—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ name, level —Ç–∞ health, –∞ —Ç–∞–∫–æ–∂ –º–µ—Ç–æ–¥–∏ attack —Ç–∞ heal, —â–æ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –≥–µ—Ä–æ—é –∞—Ç–∞–∫—É–≤–∞—Ç–∏ —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∑–¥–æ—Ä–æ–≤'—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ.
// –¢–∞–∫–æ–∂ —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤

// –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å name –º–∞—î –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —ñ–º'—è –≥–µ—Ä–æ—è.
// –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å level –º–∞—î –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ä—ñ–≤–µ–Ω—å –≥–µ—Ä–æ—è.
// –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å health –º–∞—î –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –∑–¥–æ—Ä–æ–≤'—è –≥–µ—Ä–æ—è.
// –ú–µ—Ç–æ–¥ attack –Ω–∞–Ω–æ—Å–∏—Ç—å –ø–æ—à–∫–æ–¥–∂–µ–Ω–Ω—è –≤ —Ä–æ–∑–º—ñ—Ä 10 –æ–¥–∏–Ω–∏—Ü—å. –ú–µ—Ç–æ–¥ heal –¥–æ–¥–∞—î –¥–æ –∑–¥–æ—Ä–æ–≤'—è –≥–µ—Ä–æ—è 10 –æ–¥–∏–Ω–∏—Ü—å.



// class Hero {

// }

// const bloodseker = new Hero('Bloodseker');
// console.log(bloodseker);
// console.log(bloodseker.heal());
// console.log(bloodseker);
// console.log(Hero.counter);








// *******Task-4******* \\
// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å BankAccount, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞—Ö—É–Ω–æ–∫. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å balance, —è–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω —Ç–∞–∫–æ–∂ –º–∞—Ç–∏ –ø—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏ deposit —Ç–∞ withdraw, —è–∫—ñ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –¥–µ–ø–æ–∑–∏—Ç–æ–º —Ç–∞ –∑–Ω—è—Ç—Ç—è–º –∫–æ—à—Ç—ñ–≤ –∑ —Ä–∞—Ö—É–Ω–∫—É. –ü—Ä–∏ —Ü—å–æ–º—É balance –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –≤ –º–µ–∂–∞—Ö –∫–ª–∞—Å—É BankAccount —Ç–∞ –π–æ–≥–æ –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤.

// class BankAccount {

// }


// const instance = new BankAccount()
// instance.deposit(100)
// instance.deposit(1200)
// instance.withdraw(1000)
// console.log(instance);





